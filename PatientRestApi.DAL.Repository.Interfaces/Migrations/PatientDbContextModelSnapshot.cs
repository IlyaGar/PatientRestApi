// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientRestApi.DAL.Repository.Interfaces.Context;

#nullable disable

namespace PatientRestApi.DAL.Repository.Interfaces.Migrations
{
    [DbContext(typeof(PatientDbContext))]
    partial class PatientDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PatientRestApi.DAL.Repository.Interfaces.Patients.Models.GivenName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Given")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PatientNameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PatientNameId");

                    b.ToTable("GivenNames");
                });

            modelBuilder.Entity("PatientRestApi.DAL.Repository.Interfaces.Patients.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PatientRestApi.DAL.Repository.Interfaces.Patients.Models.PatientName", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Use")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("PatientNames");
                });

            modelBuilder.Entity("PatientRestApi.DAL.Repository.Interfaces.Patients.Models.GivenName", b =>
                {
                    b.HasOne("PatientRestApi.DAL.Repository.Interfaces.Patients.Models.PatientName", null)
                        .WithMany("Given")
                        .HasForeignKey("PatientNameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PatientRestApi.DAL.Repository.Interfaces.Patients.Models.PatientName", b =>
                {
                    b.HasOne("PatientRestApi.DAL.Repository.Interfaces.Patients.Models.Patient", "Patient")
                        .WithOne("Name")
                        .HasForeignKey("PatientRestApi.DAL.Repository.Interfaces.Patients.Models.PatientName", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("PatientRestApi.DAL.Repository.Interfaces.Patients.Models.Patient", b =>
                {
                    b.Navigation("Name");
                });

            modelBuilder.Entity("PatientRestApi.DAL.Repository.Interfaces.Patients.Models.PatientName", b =>
                {
                    b.Navigation("Given");
                });
#pragma warning restore 612, 618
        }
    }
}
